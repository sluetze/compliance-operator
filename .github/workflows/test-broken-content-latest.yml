on:
  push:
    paths:
      - 'images/testcontent/**'

jobs:
  test-broken-content-container-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        TAG: ['new_kubeletconfig','unexistent_resource','proff_diff_baseline','proff_diff_mod','rem_mod_base','hide_rule','rem_mod_change','broken_os_detection','from','to','kubeletconfig','variabletemplate','kubelet_default']

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Login to ghcr.io
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/complianceascode/test-broken-content-ocp
          tags: |
            type=raw,value=${{ matrix.TAG }}
            type=sha,format=long
          labels: |
            org.opencontainers.image.source=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}
            org.opencontainers.image.title=test-broken-content-ocp
            org.opencontainers.image.version=${{ matrix.TAG }}
            org.opencontainers.image.licenses='Apache-2.0'
            org.opencontainers.image.vendor='Compliance Operator Authors'

      - name: Build container images and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: images/testcontent/broken-content.Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          platforms: 'linux/amd64'
          build-args: |
            "xml_path=images/testcontent/${{ matrix.TAG }}"
